// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.PostgreSQL.Thor
{
    [DbContext(typeof(PostgreSQLThorContext))]
    partial class PostgreSQLThorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Thor.Domain.Chats.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("character varying(42)");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("boolean");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("bigint");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 263, DateTimeKind.Local).AddTicks(1653),
                            Creator = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            Disabled = false,
                            Groups = "[\"default\"]",
                            IsDelete = false,
                            Key = "sk-jlnweatahO8zo54zmQr8EKK8MOccg1h4IJWg9T",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Domain.Users.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<double>("Rate")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Creator");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae1729d"),
                            Code = "default",
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 263, DateTimeKind.Local).AddTicks(9925),
                            Description = "默认用户组",
                            Enable = true,
                            Name = "默认",
                            Order = 0,
                            Rate = 1.0
                        },
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae17291"),
                            Code = "vip",
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 264, DateTimeKind.Local).AddTicks(285),
                            Description = "VIP用户组",
                            Enable = true,
                            Name = "VIP",
                            Order = 0,
                            Rate = 1.0
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<bool>("Disable")
                        .HasColumnType("boolean");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quota")
                        .HasColumnType("integer");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("numeric");

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("numeric");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("text");

                    b.Property<int>("QuotaType")
                        .HasColumnType("integer");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eff43271-6f4e-41bf-b5c0-05d110e1b2e2"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(2660),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("980c6215-4a1e-4ed3-8e19-d788fa160c05"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3084),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4e7ca535-d7aa-46be-a249-b3020ee05d0a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3085),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("588d9ee2-c48c-4a5b-9c34-18a1c3f24233"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3092),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5ef96e3d-2366-42a5-8106-cd193b16db71"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3096),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("10081137-c8b2-4edf-81c7-ab555890f1df"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3096),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e841a7f6-6f8f-47a8-b0ef-5c9ae2f66695"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3117),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8fd5162f-d405-40ae-967d-8f2bfad89936"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3118),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ee59ebe4-a838-42a7-89bd-7ec6b1f88a4a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3124),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0d84295c-7cc6-4ddb-970b-4281b713cf80"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3125),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f23ebc17-96cf-4dbe-ad28-20306a41a751"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3126),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f83096b8-6939-4cd9-8956-195ef73d657b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3127),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5632e74e-9f1e-4017-97b4-c9237bd6ad36"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3129),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2577f153-4aea-4a02-aedf-967cb4ade170"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3130),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e7e82682-05e2-40ad-8787-9b4014c5629c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3134),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1be70f98-04ab-45a7-8edd-51b53dee1768"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3135),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c6cfb518-4fbf-4654-822e-437d3b8e54fb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3143),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6cb0467c-0853-4241-991d-46f5fee8ce64"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3145),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c9e7fcbf-3b43-48f9-8ef4-98a2782502bd"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3146),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("eaa8f99f-acb1-4d4b-946c-628a2456172c"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3147),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1d810cd1-a050-4282-bb9e-183be139cdc8"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3148),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("cfba95f5-3a32-4fcc-94d6-12cf119f3380"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3154),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a53d7c92-58af-4283-9302-ecdfe1413b15"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3157),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("55945c3f-ed4e-428a-8e2c-bf475a576af4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3158),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5ef570b5-8bc3-4d55-9dd3-ae8c1af712d0"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3162),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("345f23a4-130e-41f9-bde7-ac2294b2e4c5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3164),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("79d6f20b-a969-446d-ae6f-6f468e362da2"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3167),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("25933a33-5130-468e-8b45-99a25d4f93d2"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3168),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0e008c48-a8d6-4206-a1df-d4a505391e87"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3169),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a0adb121-98c6-4e62-a7d4-9663288abbef"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3170),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b999da53-39a1-477c-abc9-4de7345cd06d"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3173),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f2c10837-4ae8-401c-b533-ff5b4835b5b1"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3173),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("464b517a-c3f2-4fba-a565-fdad7bdaa090"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3174),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9a9c3a8a-4d1e-4ce0-be49-1e7b0d6f958a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3180),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e986ca62-1a83-41ff-afca-ec4ba629b80f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3182),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2dcd9e50-f53e-4ddc-851b-7bf7af6bf6c7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3182),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0f00355c-ac5f-48f7-b486-b22e0b77e397"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3183),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("affbe1cb-6d63-480a-9832-2ca97c153f24"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3185),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("02b2268f-2018-4088-aa33-866df8cb374c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3188),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fb935b7f-8529-4e16-b38c-1bde94c493a7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3189),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5ff7b8be-578c-41b4-b705-19ce21492dc9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3190),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("99a88c54-ea71-48f9-851e-cea3829a60f8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3191),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("53965cce-c543-46a1-b67a-edfe78187405"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3196),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6d7fb8bb-1dd9-4871-9dbb-13c45dc16643"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3196),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0f913a39-ca10-4417-b968-4a06204e863e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3197),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3ff2e8e7-2a7a-4668-bb63-dbdcc39e3952"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3198),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("637971c3-c0d7-4870-94dc-9fa7b04c2664"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3202),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3a3ab8ef-c43f-41d0-98e5-f7e97fe905ca"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3204),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2107d343-797a-44df-8735-10ab7dc73252"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3205),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4a174bb7-d3a7-4ee4-a41b-94a418585b76"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3208),
                            Description = "通用文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fc1c5734-67a8-4a69-a4e7-5b4d9da4b19e"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3211),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4d3c81b4-1817-4bd6-972b-b60601cf5f70"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3213),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("42b55270-2976-4537-90a6-a882a4b3afd0"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3214),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("641453f9-3549-401b-8b2e-0487e86bec29"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3221),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c644d355-769c-46fd-848e-7290a30b2713"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3224),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c02e2cc9-fb67-4160-9d82-d96fefcef64d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3227),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c454b5d9-1776-4bcf-9b36-b7500456d2a4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3228),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4aaf5075-c20b-491f-af14-08dfbd6964c3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3230),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("84767e39-c0e0-488e-9a2d-1db54475162b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3231),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2735a61a-f65b-4b3c-95e4-c5822d372c2f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3232),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("657c068f-9cd2-4847-a793-99e2af99634d"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3238),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("70d188f2-d07e-47f4-99ff-1da696d5285e"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3241),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("64e75b65-aeac-4bf1-b240-4e5ac48dd4b0"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3247),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a3411029-a141-4658-b964-b52aa5ee9f6a"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3253),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("bbda6324-cf66-4932-9a8d-3243915667d9"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3254),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d7c6d8e0-2941-4a88-bce8-872486ddf078"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3256),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b9b09bf3-4595-431b-a84e-5aed5f0664ab"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3258),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a0c897c5-36a3-4af4-a898-f5e770ff1092"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3260),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1f968ade-59f0-465f-8a57-2f128100117b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3262),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("aa2b94b8-c191-48fa-8829-a0789d6372df"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3263),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a516f0e5-80db-4f70-ba5a-d5abc7427c0f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3266),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e07f6e65-5c68-4605-afeb-c58e52d61c6d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3269),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a27ed3da-0d39-4bb0-834d-eae073b0d5b9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3271),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0c34bfbd-6528-4112-8018-7a56edededea"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3272),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4eda83a2-7177-4640-b6ad-316aab7a9efa"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3274),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("241acf3d-ec4e-43df-b506-2b0ad950b1e8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 304, DateTimeKind.Local).AddTicks(3275),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModelId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModelMapItems")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelMaps");
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<int>("Limit")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Quota")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("text");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Private")
                        .HasColumnType("boolean");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Modifier")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RequestCount")
                        .HasColumnType("bigint");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 25, 261, DateTimeKind.Local).AddTicks(5913),
                            Email = "239573049@qq.com",
                            Groups = "[\"default\",\"vip\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "482b6f63cd64ef2e12ebbf0abb6150fd",
                            PasswordHas = "356c5d329dcc468081267147ea099423",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
