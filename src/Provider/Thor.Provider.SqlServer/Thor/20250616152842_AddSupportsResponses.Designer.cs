// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.SqlServer.Thor
{
    [DbContext(typeof(SqlServerThorContext))]
    [Migration("20250616152842_AddSupportsResponses")]
    partial class AddSupportsResponses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Thor.Domain.Chats.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("bigint");

                    b.Property<bool>("SupportsResponses")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Domain.Chats.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("bigint");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 557, DateTimeKind.Local).AddTicks(5533),
                            Creator = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            Disabled = false,
                            Groups = "[\"default\"]",
                            IsDelete = false,
                            Key = "sk-Hs8jmpL6pLjVCUoy6S9i4PxoAesMv393hcR90S",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Domain.Users.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Creator");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae1729d"),
                            Code = "default",
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 558, DateTimeKind.Local).AddTicks(3317),
                            Description = "默认用户组",
                            Enable = true,
                            Name = "默认",
                            Order = 0,
                            Rate = 1.0
                        },
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae17291"),
                            Code = "vip",
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 558, DateTimeKind.Local).AddTicks(3693),
                            Description = "VIP用户组",
                            Enable = true,
                            Name = "VIP",
                            Order = 0,
                            Rate = 1.0
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuotaType")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffc823b7-e912-4238-afa1-60b728ebd773"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4095),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("de5db86f-6fae-4cb3-b17f-883f2f6a6ce2"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4421),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("bd6e97f3-d817-426c-9d73-aa33d0a49e89"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4424),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("05e86279-444b-4f77-a950-8ac669eb40b5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4425),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5efffaeb-0d78-4824-9b9b-dfa07b14613d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4427),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c485d60e-40b0-4a99-8bc9-98d72902bd43"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4428),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("33156f30-cab2-4484-8331-0c3a332fb9f3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4429),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("faf2b433-52ce-4796-b194-51bd9e3bda16"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4430),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("71800c7e-1913-476c-9e7c-13bf7311b48d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4434),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9009bc1f-7acb-47e2-83b5-90dfa57e51bf"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4437),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b000b042-ee25-4d21-b131-230e7f67a9e1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4439),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("58a6f6b4-8a63-4330-85c9-d96248dfffcf"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4441),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("371718a5-6d1e-49c4-845b-ec7017f145b6"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4444),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ecc9a3b4-e306-4504-973c-c3001f654197"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4445),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e83865f6-2db0-4578-bae2-fbc0c69f4477"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4446),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("102f0f4b-5b3a-493a-a03a-b04502b3c5b9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4448),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c20dcd9c-9248-4398-9f10-96eaf43713cd"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4452),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a27d7691-2370-4a19-ab01-ae0149c4ce9c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4453),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c3104d83-0107-4921-92f2-d1b1337bff69"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4454),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ad0fe124-0e1e-4603-ab8b-3c04cd5b93d1"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4456),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("72afeb42-5fa3-44c2-86b2-5e5db28a7365"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4458),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1fe4c9c5-8457-4cfc-894c-e599a170ec3e"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4459),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("27956de8-b97b-4b93-99b1-b6066ee7b0be"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4460),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8fd587d1-979c-499d-a6fd-ab10b2b728f9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4461),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("58b25505-40c2-4b3a-b344-255fa2e9bf15"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4464),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2d681dac-c2fe-4809-a162-8ee6f47c5089"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4471),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("11df0acb-be16-4c11-8eec-6518dc6c85d9"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4472),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e2d21df5-7794-461d-be40-ceaeee1cb325"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4473),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("09ad340e-2a52-4be4-8b7d-cd7e66d41cfe"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4474),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9318b593-610c-485a-9644-a3050628eeb0"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4475),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e32f3311-2d76-482c-9b53-02073a5a9f8a"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4477),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("7b121482-bdf3-4577-b61e-1ec6b92b6e79"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4478),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("53eaf2c8-0281-4eb9-979f-3d60c4cac542"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4481),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b0401c18-b7f2-44be-a508-aad885ab7520"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4483),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f89dd699-72d6-49c7-b677-d5462be079cd"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4484),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("531a101d-264f-4da4-bcfa-3221316e6547"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4486),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1e1269f3-231c-4418-b0d7-c3f5b9c78560"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4487),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("409fbaf8-246c-4de6-974d-8192c9804fdb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4489),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("571fa230-0ad9-4d19-b28b-653a5441de2b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4489),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("74a1158e-3133-4c59-b11c-15f80c061e3f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4490),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("cd99fdf8-07bd-4964-9cce-f43d2e4f0043"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4493),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("986794d7-354c-47cd-bb00-23c9797ca67f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4494),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("206de9b5-e045-462c-9e39-1ffe405ffc0a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4495),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("892856e7-8dea-407f-93b9-02c9728b2f8c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4496),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("460fc313-1f21-49a1-86f5-46b053aa2f60"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4496),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("478e8e77-979b-444d-ad65-3d49d67cfefc"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4497),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("d35543eb-7642-4047-adac-318dac91a135"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4498),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("6c63980c-6529-4310-8d69-7ec231a614a2"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4499),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "stt"
                        },
                        new
                        {
                            Id = new Guid("341e094a-c67e-47bf-a6c1-0ee946b5fe59"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4502),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c3b94f12-33c4-455e-94c0-5bc570ce817e"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4502),
                            Description = "通用文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("146c899e-a8c5-4a31-88c6-fc7058a3ab80"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4503),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3d801782-7daa-4b70-8000-fd8b8df8b0f9"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4505),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a4e242b7-c52f-4ec5-b4ed-89ccb817141d"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4506),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("01eeedeb-1c80-449d-9a77-76e975f9ff78"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4506),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fcf8d858-a576-4c5f-8317-d71d2aede17e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4507),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fbba0c9b-1c58-44e9-93d3-024f0dde92cf"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4508),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e176a06d-5cd1-43c5-aad8-318076fe6694"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4512),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b7c2569d-d314-4217-9c2b-534f058ca12d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4513),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1816e3da-e687-44eb-a847-601f56b8f0b8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4514),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2e7b0cc8-4d6c-4de6-b0c7-4589aac92ca8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4515),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fda625d9-ee32-4c7e-b93c-bbc490f28c89"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4516),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("179825c7-3c6d-4485-8b86-a541d56956de"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4517),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("07f81b87-75f8-4550-b5cb-db0b8047a167"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4517),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9a9c08db-2157-482c-8b29-f086152f6514"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4518),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("41d9fd6b-e16a-4fb0-bd8f-9129e638baa7"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4521),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("138cc648-0be8-45d8-b55b-c5c2bc6f35aa"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4522),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("87da8ea4-8c44-47b5-a5e6-dfb929a685b6"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4523),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0b026a6b-7ee0-4fb1-89ab-d8662de582f1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4526),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("cdc637ac-3d66-4d5a-adce-2c4d731020f6"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4527),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("b75e4c89-f8c6-4582-aef1-771adbf6197e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4527),
                            Description = "GPT Image 图片生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-image-1",
                            PromptRate = 50000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("acd9fc8b-03c9-4c20-a0df-430855d6b56f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4528),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("f632dab4-b8bb-49b9-aa81-88cb88a41f7f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4529),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("b1deed19-33b3-4ddb-b7f6-51c9cfc21cd1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4534),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("c38f933e-8f76-41e7-8a0a-ca4fb96e42a6"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4535),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("209b8751-1a3b-435c-8963-800eb39e014c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4536),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("18a3de73-57ed-4a36-8581-d63e4c1d296b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4537),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("45273cda-ac7e-442a-9896-822eb69d2ace"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 597, DateTimeKind.Local).AddTicks(4538),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModelMapItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelMaps");
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Quota")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestCount")
                        .HasColumnType("bigint");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 41, 556, DateTimeKind.Local).AddTicks(171),
                            Email = "239573049@qq.com",
                            Groups = "[\"default\",\"vip\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "0983eaa1e7837e5589ac163d6692b37f",
                            PasswordHas = "e165f0cbf1c04355a8e64fab3f735ba5",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
