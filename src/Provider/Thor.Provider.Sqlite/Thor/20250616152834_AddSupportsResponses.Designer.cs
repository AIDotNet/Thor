// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.Thor
{
    [DbContext(typeof(SqliteThorContext))]
    [Migration("20250616152834_AddSupportsResponses")]
    partial class AddSupportsResponses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Thor.Domain.Chats.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quota")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SupportsResponses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Domain.Chats.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("TEXT");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 26, DateTimeKind.Local).AddTicks(1936),
                            Creator = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            Disabled = false,
                            Groups = "[\"default\"]",
                            IsDelete = false,
                            Key = "sk-uN6V4BKzb6xO2AbS4tnWPbLMnYJSbUxS3HF7gI",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Domain.Users.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Creator");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae1729d"),
                            Code = "default",
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 26, DateTimeKind.Local).AddTicks(9551),
                            Description = "默认用户组",
                            Enable = true,
                            Name = "默认",
                            Order = 0,
                            Rate = 1.0
                        },
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae17291"),
                            Code = "vip",
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 26, DateTimeKind.Local).AddTicks(9904),
                            Description = "VIP用户组",
                            Enable = true,
                            Name = "VIP",
                            Order = 0,
                            Rate = 1.0
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuotaType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb1ebb21-f1a2-4d81-a17e-4ff77c87144f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(4870),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ce4ddfbd-7322-419d-9616-f89775c41156"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5060),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("275643c7-94fa-4877-9006-3efc0ddf7724"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5063),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("26cc0f82-f9c5-4ca2-9e13-d38e810920f5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5064),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9e518f19-628e-4e3c-9181-2ae5050d05a3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5065),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c7f8d633-40da-4b85-b479-4909dbd02a2b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5066),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fd01785a-e525-41f6-a01d-f2545a6c4395"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5067),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d70df211-03e5-46fc-bb9d-fd5dea23c43c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5068),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b5ffa7cf-8c4a-4960-ae96-7697eb8c07a6"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5072),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a1dd41dd-f602-4834-bba9-950827e1ea1d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5073),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5bec3584-8709-4e59-b7a6-0e833417348c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5074),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("836a74fd-182a-489d-9c1d-bf888b6a355c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5075),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("77b67396-a09b-4d3e-a2a6-5fe13855c6ba"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5076),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0abea06d-a5bc-4885-95f6-9f31c05a4656"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5078),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8e2f5e52-e944-4814-85f6-53ef1d4ca7a4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5079),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ac24e8fc-dffc-41d6-bd89-84ecd843d009"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5080),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("de896138-56c3-4eb6-8eec-6858b184adff"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5083),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c36ac6fd-4a4b-4615-82d6-8e54d42cfccb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5084),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a7966a92-67ab-4f46-b2ea-df6313195036"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5086),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("265b0d3f-b291-41f2-88ff-750733e06f7b"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5087),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("96626a74-3a9b-428f-9583-5f944c5f0d04"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5088),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6aa5afce-5a20-453b-b96d-15ab99fe0591"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5089),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("04ab7de5-f9fb-4549-a0db-3763578b8048"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5090),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("06f1735a-a2a6-4624-9988-dc0b2d902d41"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5091),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4ec93c44-848d-4c67-b6f4-037edf7955b4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5095),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("54bf4ed9-3e0c-4dde-bcc3-81d17a10107a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5099),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("bf509c18-753b-467c-b5af-dda3856f7b3e"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5100),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d814e577-220c-44de-ae93-6e998c494edc"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5101),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("184bee6d-2c21-463e-a6d1-542308371318"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5102),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3db61cd3-dd41-4676-b6c8-be4ab3dbf110"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5104),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("516aab9c-f326-4a1e-8feb-1a0d02505607"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5105),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2029b418-819a-4a50-b9eb-99a1d5ef8137"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5106),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ea683742-23f1-4329-a91a-d4e192f108dd"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5109),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("10de39da-9c19-4b82-be98-0fd5a7c47d94"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5109),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5474bb86-f24f-4078-bc79-d0cbdac16e08"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5110),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("bc0fe9ba-9a13-4e71-8f26-ac71b4a18a9c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5111),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("cdc4f8f0-3ab5-4e02-87cc-37417b5ccc8c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5112),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ab9749c5-3ea3-4c04-ba25-b15b1282248e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5113),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("983f635c-4961-44b0-8b54-db1f15d8632f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5114),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8a71b689-119d-49e0-8fbe-a6c6ba31acd8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5114),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1d487173-2f45-4cc3-9241-854b5bda814b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5117),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("91ae2ac6-2297-466f-84f7-6ebee78af560"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5118),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("6d0cdfbe-ffb7-47c4-a2bd-d1dab3a9eea1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5119),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("5e8d22e0-3970-4b58-bd7f-f0306e7f519e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5120),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("55001c56-abac-4778-8f40-84ed0d0789d8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5127),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("067c6b4e-4e94-43ec-9396-d7b07948c63f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5128),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("a1fa6adf-e4ed-4012-bfc8-402f0a681cf7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5129),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("b0edf0c8-1742-455f-8d68-24ff775a2236"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5130),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "stt"
                        },
                        new
                        {
                            Id = new Guid("1e5c97d0-18b5-40bc-99de-73c1902bf6a9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5132),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("94c746d2-fd54-4e42-9748-3e33333690dd"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5133),
                            Description = "通用文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("59d76bc3-8c30-4b04-b22f-6d9fedfef0f8"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5134),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3360623a-945d-497a-b760-533d872caa52"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5135),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6114dde6-7727-420b-8517-ce36bee6ecee"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5136),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c77c5c45-6347-484a-a139-fa4b08b2a28e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5136),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("32807691-fc05-4855-87af-931f7105e79d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5137),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("00c12dde-826c-4798-9960-21ba4ec135a5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5138),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("30b75f86-e4b2-4e0a-abb6-238f3e00e4e8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5140),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("13f2836b-f780-4bd7-aaa3-2f8a9b2ac54a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5141),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e2b292c1-6cfe-4e48-96f5-209a53afe090"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5142),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("deb9f44f-e451-489f-86da-0a1056959a47"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5142),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f109b24e-2295-4e99-b31b-78e69831308c"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5143),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c16587b0-fff6-43ba-8026-1ff14d62b0af"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5144),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5187db75-dab8-486e-8697-320b00e675f6"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5145),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("870c90e1-6a3b-44d7-bac0-6d282af8e040"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5145),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("42fbc201-eec8-4bba-b2c2-30482d5c1631"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5148),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("01a2a1b4-6e93-44e1-b8e4-3cb1ceb6b356"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5148),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("cff70e18-def1-45cf-9eb5-17768397152f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5149),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5ed4ec49-ccb2-4808-900a-c7b747c6eb28"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5150),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("f236463b-2200-47aa-a019-f59714c00e1c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5151),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("aa3e75a6-a025-4874-b465-005e4823c08e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5151),
                            Description = "GPT Image 图片生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-image-1",
                            PromptRate = 50000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("8db54b10-fe75-4f67-a47a-fba874dc3dd5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5152),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("6018d709-3f06-4326-a588-994435d56079"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5153),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("edb2e582-53ce-419a-be56-bd0150077919"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5155),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("2bff6cdc-247c-43e3-b231-74a2017322fe"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5155),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("14e55979-98af-4258-a1e3-7635027caa06"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5156),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("384a47fe-5e03-4542-b688-2947d302d0ca"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5157),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fa8673d2-3541-4ed8-9ffe-7e7860700e84"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 62, DateTimeKind.Local).AddTicks(5158),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelMapItems")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelMaps");
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Limit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Quota")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Private")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RequestCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 6, 16, 23, 28, 34, 24, DateTimeKind.Local).AddTicks(6416),
                            Email = "239573049@qq.com",
                            Groups = "[\"default\",\"vip\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "45ef41182a9a646b755dd3d9c1d42f39",
                            PasswordHas = "092f36cada6e4efbab20ee85e7695d7e",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
