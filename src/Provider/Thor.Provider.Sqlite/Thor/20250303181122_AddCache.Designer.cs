// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.Thor
{
    [DbContext(typeof(SqliteThorContext))]
    [Migration("20250303181122_AddCache")]
    partial class AddCache
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Thor.Service.Domain.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quota")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuotaType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b550fe03-0671-450d-a81c-81cb6cf9cdc5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(60),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c50a26fa-1749-47c3-aa38-e291904661bb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(329),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0192257c-1097-4cdb-9171-87b252ef4599"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(331),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("3b5556bf-ca24-4f43-ae1d-b7d2ad3bcfdc"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(332),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("4f37b025-aab0-43d9-84ce-e52611e13ee9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(333),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1f965c7e-7da6-465c-bb59-cb7a8d3c9b37"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(334),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("15d32a60-81db-450f-a8fa-e08eba40ff7d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(345),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("29092d91-3407-4d99-9223-dbff684b28d9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(346),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("82cd056c-e700-4a2f-b6c1-a91b73788ee4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(347),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9053a9f0-ab82-4851-b4c3-95bac92f08ac"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(348),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6bf6dcb1-4ac1-46a4-b5f4-3229d00aaf89"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(349),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("721c42c4-de00-4bb4-9994-e2c5a24dc0c3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(349),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("d9e8fb12-52f1-4b6f-aead-4db3f41419cc"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(350),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("d5b1d1d0-a8f4-4419-b8db-1e7caa9e5d0a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(351),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b6134439-861b-466d-85bc-a80c492a3ccc"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(354),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c3554985-3afa-4a2e-8f75-907cde8a5a28"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(355),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("763b2305-d348-4668-9e21-27be263c10e3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(356),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("5cf6cd48-e0c6-4272-b041-fbd249af9110"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(357),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]"
                        },
                        new
                        {
                            Id = new Guid("394ad737-7874-472a-9885-29965da0c371"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(358),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("8cf85f34-7e22-4171-9c90-133210706fac"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(358),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("176ef48a-f67a-4fe2-9acc-302e0cc8ce21"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(359),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("46c3fcfc-8f58-4479-871b-4e6c841dc807"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(360),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("0b81ae56-0e30-4088-b63e-35418be1d580"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(363),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ec645c94-7fca-4854-8edd-f2178dacfe25"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(364),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("bbc37646-bd22-4276-a1f8-2ba0ed95f18e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(364),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("1efc3282-b04e-4b62-9365-0e9338e63cbe"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(365),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("b43f9121-937a-4831-a5d5-6d2917c2a26d"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(366),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("29e541c8-c3c2-4f08-a53a-41a879388a55"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(367),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("ac46ddfe-e7eb-457e-84ea-84719871875f"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(368),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("1fc9c1c3-a5fe-4d0d-ae8b-2869783ef342"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(369),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("30205c52-c824-412b-95c7-3b81bb208a46"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(371),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("3beeb771-08c5-4e4c-8f5b-1eef00ea0d1b"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(372),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("892246c8-fe49-4e31-9104-13f8a1012b69"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(372),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0f2a483e-e116-4379-ac58-c864c1fa5afb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(373),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2342eb14-5378-4afc-92a3-5e784cc8f693"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(374),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e9085aac-a0e4-47f2-a529-f22c03c05824"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(375),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("01bc9c44-15ee-411c-ad97-b85e995bb0fd"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(375),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c52d0478-054f-44d6-8398-945bb538a5e9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(376),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("5c26255e-5283-4a1e-a6c8-0116cd075354"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(378),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1b5896c2-52d3-4f3c-907a-854757da94e1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(379),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("990f1eb7-1e8d-433b-bdab-be20e60ace03"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(380),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6d62ce38-58ba-46c9-9066-833b0d5860da"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(380),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1ddf0c42-b720-4e98-b422-49df2e0bbef7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(381),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("00abe1ce-ff24-44d6-94fb-f600a18e413c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(382),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("f2b0edba-2e89-4d3f-a6dd-7f8d1e00b63b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(382),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("1b7c0fd6-a6bd-414e-875e-a5165668b408"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(383),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("16e559c5-6af3-4504-849d-5101299bbc92"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(386),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("e9bfd0ae-0acb-46e4-8e29-6cbcbcc56056"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(386),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("31d0a303-c327-4ce1-a1f1-8c0f46a6689a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(387),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6543c4cc-e2aa-4545-8a79-b26b47944648"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(388),
                            Description = "通用文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6ae87ce6-3752-40fe-8b4d-ad6629a24461"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(388),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("64c7fd87-a48f-4d80-981b-55b2aa5f2ced"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(389),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("46e2fb16-a00b-47cd-8581-d3748fe46de7"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(390),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("84d74034-ed2e-447a-aae0-8d28ad30ed64"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(390),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9a066c95-8616-4267-9917-c48d803ab6c1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(392),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b35a28cf-1730-4fef-83f0-4e168d0a7497"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(393),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b86474b2-8b7a-4043-8e18-1443155887f0"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(393),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a5487e9d-89b5-43e5-8c45-671d92aa6392"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(394),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("f6b64ecf-3aa1-4b2e-8fc4-798b1e942401"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(395),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("02a95715-8bb6-4ebe-b848-5e4f09b4b985"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(396),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("de2e8b6d-80e8-4670-b0a7-03fed37f97df"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(397),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("bf0c7c84-861f-400d-868c-b6f766e118d6"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(397),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2e742b86-e1e0-4228-a92e-fff68b882937"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(399),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("fbf4c002-5018-4bc2-acdf-303d4a0d95b2"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(400),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b0cc943c-0920-4cfd-a55e-f8db66256b59"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(401),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e54a39b8-7e20-4a59-807f-247869cd4639"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(401),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("4e8660bb-0601-47b5-9dbd-57f92380236e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(403),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("46090e21-2ab1-4e8f-9640-638adc7dd92f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(403),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("2bae1626-e0fc-4239-bcac-495e40a8251b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(404),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("ac6ac05a-d863-488d-88ea-b8c59511aa5f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(405),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("e9ada6ab-cbee-42bd-8953-20ea788c0f5b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(407),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("cc512b20-82b7-41e5-8ea2-cc5e3cee5f0e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(407),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("3493550c-ebd5-47a2-a79b-06f71d739ee4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(409),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("8c13b7b4-f0b6-4760-a42e-25a13a620c3a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(409),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("aa9bdb9d-dadb-4c7b-90ef-d3148bcb0ecc"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(410),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9c91fa26-8b0e-47c8-b002-cee749235bb3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 591, DateTimeKind.Local).AddTicks(411),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Limit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Quota")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Private")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("TEXT");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "a02566e1-b29a-440e-8012-2e09cc6a2fd1",
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 541, DateTimeKind.Local).AddTicks(9998),
                            Creator = "f958a5cf-4e7c-464a-b7da-23be1e3a78e9",
                            Disabled = false,
                            IsDelete = false,
                            Key = "sk-pta5WZtWprDULnij9NXWleuHjD4m45u6ndnHw9",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RequestCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "f958a5cf-4e7c-464a-b7da-23be1e3a78e9",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 11, 21, 540, DateTimeKind.Local).AddTicks(5264),
                            Email = "239573049@qq.com",
                            Groups = "[\"admin\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "7fe6711a2c881581c14e6e126d93689c",
                            PasswordHas = "d745d0b40a9148d6a69a6ee5f1ee3530",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
