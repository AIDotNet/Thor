// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.Thor
{
    [DbContext(typeof(SqliteThorContext))]
    partial class SqliteThorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Thor.Domain.Chats.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quota")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SupportsResponses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Domain.Chats.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("TEXT");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 741, DateTimeKind.Local).AddTicks(9410),
                            Creator = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            Disabled = false,
                            Groups = "[\"default\"]",
                            IsDelete = false,
                            Key = "sk-vKkCEqUKAiakeCO9AoneSfcYd2rkCrT399dfJJ",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Domain.Users.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Creator");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae1729d"),
                            Code = "default",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 742, DateTimeKind.Local).AddTicks(8575),
                            Description = "默认用户组",
                            Enable = true,
                            Name = "默认",
                            Order = 0,
                            Rate = 1.0
                        },
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae17291"),
                            Code = "vip",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 742, DateTimeKind.Local).AddTicks(8997),
                            Description = "VIP用户组",
                            Enable = true,
                            Name = "VIP",
                            Order = 0,
                            Rate = 1.0
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Announcement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpireTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pinned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContextPricingTiers")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ContextPricingTiers");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultContextLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuotaType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2629ba8-eaaa-40d4-96db-67146f5b5c55"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(2),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("eed1dcf6-551b-4509-9605-831c1e0cb858"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(218),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4720eacc-c9eb-423e-bba1-c6474b8cbaa5"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(220),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b1c6ff90-8615-415f-989d-94bb5f202899"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(221),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4ee1132d-0e3e-4808-a987-db7d92e35f39"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(221),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("696c7fb6-55d7-45a7-9753-acfc9aaee179"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(231),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b79e72dd-4531-4911-8363-d9b4bfdc5534"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(232),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("312ab63b-d004-4f09-a047-0d50d319c854"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(233),
                            DefaultContextLength = 4096,
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fe8eae36-13b7-46d0-8d2b-1a65d3fa06a7"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(233),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("04ab74a3-c02c-4792-ab52-4742fd1b1912"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(235),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3fa7af9e-3f24-43b1-bbf6-9faaf19aaefd"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(236),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("25526b0b-7978-4d6e-b074-7e365fe38f68"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(236),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3cce976a-36ff-4867-8893-9e4321a4b684"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(238),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("da9b64a2-44c9-4b29-9c86-2aad6fd08cb2"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(240),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("133ffa5e-3628-4fa6-8e38-5fb972f649bf"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(240),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8f753afa-0a71-487c-82b1-245fa95bf0d2"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(242),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ae2aeef3-ac47-4078-b8a1-7f0c8db767ac"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(242),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("742e1dd3-4e99-47f6-ba64-18cca85367bf"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(243),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e585957a-bc53-4ec2-9566-26ce30d04663"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(244),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5b92e29c-1d28-4ec9-86a9-5e960ed1f4e0"),
                            Available = true,
                            CompletionRate = 2m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(244),
                            DefaultContextLength = 4096,
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5c6f84d2-c571-44be-8bd2-3bed42bd2ccf"),
                            Available = true,
                            CompletionRate = 3m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(245),
                            DefaultContextLength = 4096,
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a96e3d06-7af6-4b92-9585-c645ebd1f0d9"),
                            Available = true,
                            CompletionRate = 3m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(247),
                            DefaultContextLength = 4096,
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5591d98c-0a03-4fe0-b5e9-e954f6667916"),
                            Available = true,
                            CompletionRate = 3m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(248),
                            DefaultContextLength = 4096,
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("bbab1a20-149f-4c59-9e0c-3a2bc51936b0"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(248),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("aa358d04-b8be-4d1e-8acf-f65b6e889fe6"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(249),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5c9e433e-9848-4fdc-911a-28f107247fd1"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(250),
                            DefaultContextLength = 4096,
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fcf1cd98-5067-4690-9447-bf5c8770afa6"),
                            Available = true,
                            CompletionRate = 3m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(251),
                            DefaultContextLength = 4096,
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("876645ad-9558-446b-a2ec-9868d7f99074"),
                            Available = true,
                            CompletionRate = 4m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(252),
                            DefaultContextLength = 4096,
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1213642c-d628-4cfa-8b64-670f9087845e"),
                            Available = true,
                            CompletionRate = 4m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(252),
                            DefaultContextLength = 4096,
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2f5e7ec8-927c-415f-a5a7-8006fd2dcc9f"),
                            Available = true,
                            CompletionRate = 4m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(254),
                            DefaultContextLength = 4096,
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("865880d2-fc3d-4b59-b544-21e4d765da12"),
                            Available = true,
                            CompletionRate = 4m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(255),
                            DefaultContextLength = 4096,
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a9db3320-5f45-4520-a34a-618581877c46"),
                            Available = true,
                            CompletionRate = 4m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(256),
                            DefaultContextLength = 4096,
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("16d09090-c410-4ff0-aa59-c28391f1923a"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(257),
                            DefaultContextLength = 4096,
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5cd1ad03-53b1-4716-bfb2-1fd14fa86350"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(257),
                            DefaultContextLength = 4096,
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("94053569-2aa8-47fc-8866-c743b0fcf366"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(258),
                            DefaultContextLength = 4096,
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5f4c9785-437f-4e24-9ed8-f6213c977d8c"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(258),
                            DefaultContextLength = 4096,
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("74328c4a-3b5f-4c9c-ab98-1b04c0d9c844"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(259),
                            DefaultContextLength = 4096,
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1415e5e3-9178-4b93-ac3f-7b3b0fde4aba"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(261),
                            DefaultContextLength = 4096,
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("522c07be-5e62-43ec-8da9-639510654dc8"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(262),
                            DefaultContextLength = 4096,
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d8bb3d79-3958-4438-a223-b95c8995c418"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(263),
                            DefaultContextLength = 4096,
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9bdbf6fc-2def-40ae-bb1a-a92545a202b5"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(263),
                            DefaultContextLength = 4096,
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("0b6b7f19-b36b-4c6e-a3d5-bee43bc14cd1"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(264),
                            DefaultContextLength = 4096,
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("99ba1305-d0ff-4b10-9340-2ec1ba1d014c"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(265),
                            DefaultContextLength = 4096,
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("82f1a552-3618-4cc4-9dc4-f77a10e0501c"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(265),
                            DefaultContextLength = 4096,
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("4eb79fa3-4717-41d5-a91e-e6949fa6a613"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(266),
                            DefaultContextLength = 4096,
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("35d31746-8aeb-4653-ad9d-687f758f8e92"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(268),
                            DefaultContextLength = 4096,
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("bf9146a3-4950-4736-a4aa-4e05e6a497ac"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(269),
                            DefaultContextLength = 4096,
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "tts"
                        },
                        new
                        {
                            Id = new Guid("d55a1ac0-da03-4d11-839b-be3eefa9590b"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(269),
                            DefaultContextLength = 4096,
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "stt"
                        },
                        new
                        {
                            Id = new Guid("d182abf7-2acd-4203-a169-cd14b9eec4a9"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(270),
                            DefaultContextLength = 4096,
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f8f2215e-ddb7-4a1b-a16c-7de8ec269cf0"),
                            Available = true,
                            CompletionRate = 2m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(271),
                            DefaultContextLength = 4096,
                            Description = "通用文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("0a1861f3-78be-451b-9121-0c97dfce5111"),
                            Available = true,
                            CompletionRate = 2m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(271),
                            DefaultContextLength = 4096,
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8326c820-3629-4c82-9b65-2f1f5203d401"),
                            Available = true,
                            CompletionRate = 2m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(272),
                            DefaultContextLength = 4096,
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d5c88ae9-cd94-4d22-9467-b6aa86afb893"),
                            Available = true,
                            CompletionRate = 3m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(272),
                            DefaultContextLength = 4096,
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("193ba09e-53d7-4fb3-ba14-be969cc01503"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(274),
                            DefaultContextLength = 4096,
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ed599241-05c5-4850-9102-4e438cfd527f"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(275),
                            DefaultContextLength = 4096,
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("32ecfd84-ab8f-4741-9cfb-1934197dd004"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(275),
                            DefaultContextLength = 4096,
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("af500455-03b1-4128-8d23-45f697ba5aa4"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(276),
                            DefaultContextLength = 4096,
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ac7a503c-f867-4891-b30a-697676d1a22e"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(277),
                            DefaultContextLength = 4096,
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4caaa51b-e64b-4a8a-aef3-2e83c1528aeb"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(277),
                            DefaultContextLength = 4096,
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9766d184-9006-4bf4-aa79-59331f313934"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(278),
                            DefaultContextLength = 4096,
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("26e2ce54-2cb9-41ea-a0e5-ebf9d86741fa"),
                            Available = true,
                            CompletionRate = 5m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(278),
                            DefaultContextLength = 4096,
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("22a65122-649b-4906-8d64-8c7302421ac6"),
                            Available = true,
                            CompletionRate = 5m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(280),
                            DefaultContextLength = 4096,
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a4e051ae-90b6-4789-a2e0-76a0fc48201d"),
                            Available = true,
                            CompletionRate = 5m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(281),
                            DefaultContextLength = 4096,
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c53db8df-9725-4b7b-a03d-890a9cef9387"),
                            Available = true,
                            CompletionRate = 5m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(282),
                            DefaultContextLength = 4096,
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("73dabe6e-aa88-4e9b-b752-d74be500a084"),
                            Available = true,
                            CompletionRate = 5m,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(282),
                            DefaultContextLength = 4096,
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2eb5c214-26d2-49b2-90aa-e4d03e863ad8"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(283),
                            DefaultContextLength = 4096,
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fce9ae05-02ee-4873-b3b0-c3ec8a813289"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(283),
                            DefaultContextLength = 4096,
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d9c0b97c-af83-442a-97ac-17c41e0517f2"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(284),
                            DefaultContextLength = 4096,
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("e69d7042-ce0f-46ff-8f2c-273783f5c3fe"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(285),
                            DefaultContextLength = 4096,
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("2cdc9f68-5353-4c6f-bf58-04f2b5d6419a"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(287),
                            DefaultContextLength = 4096,
                            Description = "GPT Image 图片生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-image-1",
                            PromptRate = 50000m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "image"
                        },
                        new
                        {
                            Id = new Guid("46e1dad0-2ade-4f36-b3ee-fba8833c5982"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(287),
                            DefaultContextLength = 4096,
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("ddca855a-c86a-4b8f-aa1d-2f8c549d3dff"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(288),
                            DefaultContextLength = 4096,
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("0fb37db9-f00d-45e8-9629-8a43d7da68ae"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(289),
                            DefaultContextLength = 4096,
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "embedding"
                        },
                        new
                        {
                            Id = new Guid("4347d580-6225-4cf6-bba4-7f8afa822f4b"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(289),
                            DefaultContextLength = 4096,
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("251b04b9-562b-428e-8bb4-ab87ffeb6683"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(290),
                            DefaultContextLength = 4096,
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("250e76da-d133-4ec5-b96d-ee3733778736"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(291),
                            DefaultContextLength = 4096,
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e273763c-39a6-4dc5-b783-75af22b95ade"),
                            Available = true,
                            ContextPricingTiers = "[]",
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 779, DateTimeKind.Local).AddTicks(291),
                            DefaultContextLength = 4096,
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelMapItems")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelMaps");
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Limit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Quota")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Private")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RequestCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 7, 15, 13, 15, 25, 739, DateTimeKind.Local).AddTicks(7534),
                            Email = "239573049@qq.com",
                            Groups = "[\"default\",\"vip\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "011a82b85e4e3d819e6a4d0145796624",
                            PasswordHas = "99ee6b270baa4d94a7d5b1838b17917e",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
