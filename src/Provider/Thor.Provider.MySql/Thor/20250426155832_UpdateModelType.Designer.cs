// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.MySql.Thor
{
    [DbContext(typeof(MySqlThorContext))]
    [Migration("20250426155832_UpdateModelType")]
    partial class UpdateModelType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Thor.Domain.Chats.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("varchar(42)");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("bigint");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 78, DateTimeKind.Local).AddTicks(6773),
                            Creator = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            Disabled = false,
                            Groups = "[\"default\"]",
                            IsDelete = false,
                            Key = "sk-1DVWcRUUz2lC7hFgwWwwTIIxWk5CQwEp3ZytC3",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Domain.Users.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Creator");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae1729d"),
                            Code = "default",
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 80, DateTimeKind.Local).AddTicks(330),
                            Description = "默认用户组",
                            Enable = true,
                            Name = "默认",
                            Order = 0,
                            Rate = 1.0
                        },
                        new
                        {
                            Id = new Guid("ca378c74-19e7-458a-918b-4dbb7ae17291"),
                            Code = "vip",
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 80, DateTimeKind.Local).AddTicks(826),
                            Description = "VIP用户组",
                            Enable = true,
                            Name = "VIP",
                            Order = 0,
                            Rate = 1.0
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("longtext");

                    b.Property<int>("QuotaType")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42ab59d6-b0b3-4df2-880e-d647a9195bd3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3412),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("62632faf-e8a3-4095-8c75-d6c0c9bd9256"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3680),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("002f35af-9109-425f-8685-4677e4d215c5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3682),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("cdf26292-9d57-4531-83ee-d33dab32793f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3685),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6e6a0e84-b3ef-4ee9-84c6-001ecee72283"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3696),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b060ed52-ebe1-48d8-a680-1aafec0ed371"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3697),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("65d08529-9840-4d25-a452-50000b9e00bf"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3699),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("13837564-5caf-45da-9cf4-17b901ecff60"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3700),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("fe882c37-6557-4347-9d63-b419e1ee2c7c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3701),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e09e1a7c-5f39-4bd5-9020-360cf1f04708"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3703),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("687e96e3-ed8f-44ac-aa7d-6dfeb91b1d62"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3703),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d4667694-88bf-4b0f-9bcb-92393d5312d7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3705),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("82652c44-20b8-470e-863e-28bb0d53f395"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3707),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8ab21cfc-5026-4a49-a78f-df909152e5de"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3709),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d23b2022-51c2-4602-9d20-0b37943b7ec4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3710),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("50ef96b3-9081-4d93-a5e1-c9fe00ea613e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3711),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("84344807-37dd-42a9-85e4-802f2e5c1a76"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3712),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ea9e548c-c97d-4207-838a-39a75e72cea5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3713),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f17f168d-9d64-4e1d-836a-8c1c7dbe4714"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3714),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8ea9ac9e-26b3-400e-9a92-a8b19efed74c"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3714),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d11ec591-e63b-4bfd-a176-5524a6bc1a31"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3717),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("860ac924-98d3-41c0-b705-985a7e8d03c1"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3719),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6475bcbc-60fc-4780-9677-84ed33540eb5"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3719),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("760a65fc-c027-42e4-8953-0fbb823ff9e5"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3720),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("51e90623-eb9f-4f37-bd79-599d22a79928"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3721),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a5944435-fb1e-45cd-a92d-8820a4d5b042"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3723),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("174f3fbb-a4fe-44d4-8ed0-5a7c50137eb3"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3724),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("e889875a-61f0-4f45-a561-f7aa172f4de6"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3725),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b878a388-1b47-4b39-84ef-540ee8664b23"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3727),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("404bf7f5-a903-4423-afb2-34af688df997"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3728),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("9439730b-5e13-4171-98d4-4002c1bd97ff"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3729),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("10391938-24fa-43f7-8eeb-d167af5d12aa"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3730),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("bdb358f7-b4ab-4caa-b6fe-09d1c84e846b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3731),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b8bffcd9-8350-4400-b5d5-2b1744d3b624"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3731),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f88fc5fd-c162-4ee4-a41b-ed74e88c3f11"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3732),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("af79712f-f546-4728-9a1a-684d8962ca20"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3733),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1c452e1a-7d74-49c6-a765-27baa4bc4a36"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3736),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5ea07754-ff1e-4282-a79a-faa5399797ef"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3737),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1a5402e8-7e21-442f-a4bf-6db05bbdb65f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3737),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("d834725a-5464-4415-8bdb-689beb4a5343"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3738),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("de3464e5-ea77-404d-adf6-6c0f1f4d04a8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3739),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("3edf6f09-7dad-4599-b843-184c5280b27a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3740),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("ab4ee029-45bd-45e2-8fd4-7383e5365a37"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3741),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("8affbd15-dec7-4304-88f8-b1a8eac95b80"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3742),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("42486217-a11c-4b3c-a425-ee0dc9836d5c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3744),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5f9f0c5d-ecd3-450c-9523-caa450513e06"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3745),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("7516bb9f-b19d-42ed-9bcf-060a48f03345"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3746),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4f9514cd-db7c-4e35-afc4-26040ef637d6"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3746),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f9e7b399-2cd3-42e0-b354-50f306b5063a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3747),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4177646d-a4a7-4be2-9252-6cbdca39b2ab"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3748),
                            Description = "通用文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("6da791b5-7dfc-4e29-a862-c5545dd1793d"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3749),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("91677a33-e812-469a-9b5f-886b77bcdd6e"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3750),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("22ea8742-91c6-465d-99fb-a72324348813"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3752),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("b45eb262-fa25-4f1c-bd1c-7f433a53b5bb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3753),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("2df4090b-3960-429c-8f52-cecd3d5c3355"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3760),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4c234719-0001-498e-9c65-5ec13aaf91f4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3761),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c26733cf-bd27-4423-9f40-6626b59b17e3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3762),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("790a6b33-091c-4271-b891-a3a89df1417d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3762),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c1277ad0-e1ec-4885-a0f0-599f9591e1a7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3763),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("716ce152-39c7-4644-b722-bdc1f65cb6eb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3764),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("db383d4c-f2b4-4582-9ab2-f3a3b4918960"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3766),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("faaa52c8-a88b-42d8-8f12-f1af91a26745"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3767),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("1e2a2ab1-3296-4464-8b37-eaec16965f3d"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3768),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5f6361ef-fbeb-43f2-848c-d3b26dd87e57"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3769),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c65251b0-aa85-4271-8f5c-ed437c7c7dd4"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3770),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c4befc68-2778-4d7a-8ed1-b77bb95800fe"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3771),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("5b627a48-2d2b-44fa-a04f-ebc9377c351d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3772),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("99068061-0288-4b84-aaa4-acf48583578f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3773),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("f8cb6f5e-8554-4a15-bec7-5b2eba926838"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3775),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("906ee678-ce54-41c3-8f40-176dfcfb94d0"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3777),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("720c6203-afa9-4af4-9445-b9a3f88e7ea8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3777),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("a932c98f-c4dc-43ad-81c7-b192da056421"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3778),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            Extension = "{}",
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("4100a32f-92b0-40bf-8a92-8d1850f5c993"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3779),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("116938ab-1631-4948-9751-8ef5f897a763"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3780),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("49efa7da-7ee0-4b32-a5f8-516ec26d6364"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3781),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        },
                        new
                        {
                            Id = new Guid("c77fd193-7041-4c2c-9d2d-b712e91deed7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 118, DateTimeKind.Local).AddTicks(3781),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Extension = "{}",
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]",
                            Type = "chat"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModelId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModelMapItems")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelMaps");
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Quota")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("longtext");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RequestCount")
                        .HasColumnType("bigint");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "CA378C74-19E7-458A-918B-4DBB7AE1729D",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 4, 26, 23, 58, 32, 76, DateTimeKind.Local).AddTicks(1331),
                            Email = "239573049@qq.com",
                            Groups = "[\"default\",\"vip\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "d4b809fc7fbbfbcbed5d7b8359e185df",
                            PasswordHas = "8fd927fd167942019b400203e5b00522",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
