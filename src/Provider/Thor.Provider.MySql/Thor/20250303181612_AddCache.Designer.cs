// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.MySql.Thor
{
    [DbContext(typeof(MySqlThorContext))]
    [Migration("20250303181612_AddCache")]
    partial class AddCache
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Thor.Service.Domain.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("AudioCacheRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("CacheHitRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("CacheRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("longtext");

                    b.Property<int>("QuotaType")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ecf9a488-78ad-4a86-9f2d-98f88106d5da"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(6830),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("7e7b321f-a59c-4f56-b82a-8d237a3ee040"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7105),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2eb55160-2adc-48e8-a378-53b777ee4bc2"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7106),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("432a644a-f896-4981-9025-712ff2d456e4"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7108),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("3ce8c828-b10d-4fc6-8e86-f4c66bed2b06"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7109),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("cc2d4bb3-0bcf-4cfd-ae28-7069f95a4d9a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7110),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a7ab758e-ad6b-4f90-a255-dda3663e599f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7110),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("97fba324-132a-4d62-b79f-9b72b7209f86"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7113),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0ae62064-615e-4bbf-a06e-4bcd379cd9cd"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7117),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b9250eb9-7456-4424-8121-1615ca558f1d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7118),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("74d201b3-0943-42f1-9142-6db2ee56a26f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7120),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("fd0f423b-0b50-4e80-9de6-7c2064e7ca4b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7121),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e04d055e-799e-4f46-8937-fb2ecd1d4e1e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7122),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("5be3f1f4-3b96-44ca-8a65-217e8ab7d138"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7123),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("fef74749-637d-42de-95e5-0678cdc2129a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7123),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0330510a-92b6-40f4-81dd-869b3e0d5b37"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7124),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6898d030-85d0-48fc-9047-0cdfdd100315"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7126),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1d1cfec1-970e-449c-8c65-0f0599afad66"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7127),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]"
                        },
                        new
                        {
                            Id = new Guid("5bb921d9-7117-4844-96e6-1a2a6291b591"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7133),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1cab3461-d9d1-48da-ab84-7fa0263e995c"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7134),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("34a4f93a-99c6-461b-876c-f9ad478fe9d8"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7135),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("7b63de5f-efaf-4547-8213-ecf1d510c427"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7136),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("5feb355c-3892-42f5-8977-fbb44bdfedd1"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7136),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0b8a6b38-7738-4e9f-87ae-a8ffef92a44b"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7137),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e35d7a51-4811-466e-9298-7f78d21ea297"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7140),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("fa23e021-ffc6-43ab-ba1c-f3a58de28453"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7141),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("ad1155b7-1af6-4649-a448-dc45595ce952"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7142),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("92eed452-510c-4bfc-b67b-0cdc7c7e3796"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7143),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("4722960a-c99f-4aac-9a0b-6204e265a89f"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7144),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("4262acc9-1b8f-4b7e-a5aa-3b1693377b5f"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7144),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("df3466d0-72d8-49e1-b467-fbaab0659a6b"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7146),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("d16ba5d4-f76b-47b6-8b19-229775a8d9c8"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7147),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("f6d84465-7ce6-43c2-932e-e381e5479b27"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7149),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("08731ce8-44d6-42f8-91b5-b9aa40cc83a7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7149),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("4bc051ba-1376-4637-b04a-1254d01b5c6c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7150),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("bf75dafd-020d-4396-b179-5d18ec7448aa"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7151),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("dfccb6ce-c155-4aa7-b0ff-ff1b6fbd468c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7151),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("bf91d528-ba4f-4efe-9ce8-42dbdee7b34a"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7152),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a672634c-6232-4316-ad35-8cec05ee40d1"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7153),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6cffaf0c-7165-4978-980b-3bad1c0208fe"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7153),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("98829a2d-a30f-4478-8303-3823ee16279d"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7155),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("00d96243-db77-4926-8c3e-ff941fdbdbfb"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7156),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2f25256b-54d1-415a-8f0e-9595ab8ef421"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7157),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("96f7731e-d579-4e43-b66a-8e6f01af9579"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7158),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("4b932eba-0b25-41a8-ba72-7dfe3d9981c9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7158),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("27fe0d6a-5b57-406a-a2b4-d0df3fc27487"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7159),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("1c524442-667c-41bd-86b8-a01d09490da8"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7160),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("a8b1cbb5-32f6-4a2c-bb93-cbb959494575"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7160),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("b90f9581-2390-463f-9060-680626352dec"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7163),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("43e825d1-2708-4ae3-814e-a7822995df24"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7164),
                            Description = "通用文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b0befe36-5143-4ffb-94ae-ab0f530fffbe"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7164),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("8ae89262-d0ee-4921-bb2c-176547d355d0"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7165),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("96003367-ba9d-4148-ba93-88fe98312ff3"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7166),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c95d3146-1440-4b84-b395-128ed56e30e9"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7166),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a6c00285-50a9-4670-9288-77a9f2132ce7"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7167),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e44d38d5-400b-421c-a3ac-40b5b83a3895"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7168),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e23a3ed5-81e9-41ac-ac26-9ad54a6dec1f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7171),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("dfe58ff0-4b9a-43e4-a8ff-2d1013c5605e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7171),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("fe17b854-1ab2-4058-b3f4-f47a41011728"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7172),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("488ebd3d-de39-44ed-b9fc-4324ed4ee05f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7173),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("64941f16-32fb-4ea6-8bc9-91ab9bad8d95"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7173),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ae8953b5-91ea-4c54-9e12-fc4877849846"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7174),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("8648326c-4fc9-4c60-808e-3df8243d4aec"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7175),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("8326e147-e5aa-4963-bb68-63d1c7873468"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7175),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("94995d6a-4a6c-40b9-a1d2-bdba7c013ec7"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7177),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6b171e55-0d9b-4168-b933-e4a604e90798"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7178),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("f017c39d-9416-4cdc-9e46-8a11b0ece03e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7179),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("833f59c2-0fbe-4984-8cdb-6a4d8c038529"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7180),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("968835ed-fdd5-4c43-ad9b-65f2218efa8f"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7181),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("ad578352-e6d9-4511-ad2f-2c885a4e0a20"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7181),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("1ffb75c4-54c1-4d32-ba08-36ea2026decf"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7182),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("14d8e5d4-d181-42e2-9946-f12d1dffe8bc"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7183),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("d3bc17a1-9bee-441f-89b6-5f77e844962e"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7185),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2615e642-bb8c-45a5-9d16-50d263c6c0ea"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7186),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("bfe8223a-9afe-43fc-a42b-37a50e951f1c"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7187),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("986cb94b-6674-4c15-bdf0-e5715bb13be3"),
                            Available = true,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 294, DateTimeKind.Local).AddTicks(7187),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Quota")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("longtext");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableCasdoorAuth",
                            Description = "启用Casdoor 授权",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorEndipoint",
                            Description = "Casdoor 自定义端点",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientId",
                            Description = "Casdoor Client Id",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:CasdoorClientSecret",
                            Description = "Casdoor Client Secret",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("varchar(42)");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("bigint");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "6057f3e2-257b-4cae-96e8-533301c288c6",
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 245, DateTimeKind.Local).AddTicks(2305),
                            Creator = "b86777c3-683a-4768-a5e0-d9b898f79c1e",
                            Disabled = false,
                            IsDelete = false,
                            Key = "sk-bPzPsLA37QQZyHCzqpG6yIPdt2AhxSRJlByUWA",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Groups")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RequestCount")
                        .HasColumnType("bigint");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b86777c3-683a-4768-a5e0-d9b898f79c1e",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2025, 3, 4, 2, 16, 12, 243, DateTimeKind.Local).AddTicks(5465),
                            Email = "239573049@qq.com",
                            Groups = "[\"admin\"]",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "fef594e232f2638ede6ad092090fc9c9",
                            PasswordHas = "b86e340de4fd4817aa95bb2609433c00",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
